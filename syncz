#!/usr/bin/env python3
"""
SyncZ CLI Wrapper
Provides the syncz command-line interface for easy access to SyncZ functionality.
"""
import sys
import os

# Get the directory where this script is located
SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))
CLIENT_PATH = os.path.join(SCRIPT_DIR, "client.py")
VENV_PYTHON = os.path.join(SCRIPT_DIR, ".venv", "bin", "python")


def get_python_command():
    """Get the appropriate Python command to use"""
    # Try to use virtual environment Python first
    if os.path.exists(VENV_PYTHON):
        return VENV_PYTHON
    
    # Fallback to system Python
    import subprocess
    
    # Try python3 first (most common)
    try:
        subprocess.run(["python3", "--version"], check=True, capture_output=True)
        return "python3"
    except (subprocess.CalledProcessError, FileNotFoundError):
        pass
    
    # Try python command
    try:
        subprocess.run(["python", "--version"], check=True, capture_output=True)
        return "python"
    except (subprocess.CalledProcessError, FileNotFoundError):
        pass
    
    # Last resort: try full path on Termux
    termux_python = "/data/data/com.termux/files/usr/bin/python"
    if os.path.exists(termux_python):
        return termux_python
    
    print("‚ùå Error: Python not found. Please install Python 3.")
    print(f"   Tried virtual env: {VENV_PYTHON}")
    print("   Tried: python3, python")
    sys.exit(1)


def main():
    """Main entry point for syncz command"""
    if not os.path.exists(CLIENT_PATH):
        print(f"‚ùå Error: client.py not found at {CLIENT_PATH}")
        print("üìÅ Contents of script directory:")
        try:
            for item in os.listdir(SCRIPT_DIR):
                print(f"   - {item}")
        except Exception as e:
            print(f"   Error listing directory: {e}")
        sys.exit(1)
    
    # Get Python command
    python_cmd = get_python_command()
    
    # Build command to execute - use os.execv for direct execution
    args = [python_cmd, CLIENT_PATH] + sys.argv[1:]
    
    try:
        # Change to script directory and execute
        os.chdir(SCRIPT_DIR)
        os.execv(python_cmd, args)
    except Exception as e:
        print(f"‚ùå Error executing syncz: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()
